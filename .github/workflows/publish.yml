name: Publish new version

on:
  push:
    branches:
      - main

jobs:
  sast-scan-semgrep:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          pip install semgrep
          semgrep --version

      - name: Run SAST scan
        run: |
          semgrep --json --config=p/javascript --exclude=**/node_modules/** | tee semgrep-results.json

      - name: Upload SAST scan results
        uses: actions/upload-artifact@v4
        with:
          name: sast-scan
          path: semgrep-results.json

  sca-scan-retirejs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          npm install
          npm install -g retire

      - name: Run SAST scan
        run: retire -v --outputformat json --outputpath retire.json --path .

      - name: Upload SAST scan results
        uses: actions/upload-artifact@v4
        with:
          name: sast-scan
          path: retire.json

  check-version-bump:
    runs-on: ubuntu-latest
    needs: [sca-scan-retirejs, sast-scan-semgrep]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2  # fetch the last two commits to compare

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Check for version bump
        run: |
          # Get the version from package.json
          NEW_VERSION=$(node -p "require('./package.json').version")
          # Get the version from the previous commit
          git checkout HEAD^
          OLD_VERSION=$(node -p "require('./package.json').version")
          # Compare the versions
          if [[ "$NEW_VERSION" == "$OLD_VERSION" ]]; then
            echo "Version number has not been increased."
            exit 1
          fi

  build-linux:
    runs-on: ubuntu-latest
    needs: check-version-bump
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run make

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux
          path: out/make/deb/x64
      
      - name: Publish
        run: npm run publish

  build-mac:
    runs-on: macos-latest
    needs: check-version-bump
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: |
          npm run make
          ls -la out/make/zip

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: mac
          path: out/make/zip/darwin/x64
      
      - name: Publish
        run: npm run publish

  build-windows:
    runs-on: windows-latest
    needs: check-version-bump
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run make

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows
          path: out/make/squirrel.windows/x64

      - name: Publish
        run: npm run publish